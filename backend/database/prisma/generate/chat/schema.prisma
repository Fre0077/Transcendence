// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator chat {
  provider = "prisma-client-js"
  output   = "./generate/chat"
}

datasource dbchat {
  provider = "sqlite"
  url      = "file:./chat.db"
}

model messages {
  id      Int      @id @default(autoincrement())
  chatId  Int      @unique
  userId  Int      @unique
  chat    chats    @relation(fields: [chatId], references: [chatId], onDelete: Cascade)
  user    user     @relation(fields: [userId], references: [userId], onDelete: Cascade)
  message String
  date    DateTime @default(now())
}

model chats {
  chatId       Int        @id @default(autoincrement())
  hostId       Int
  host         user       @relation("host", fields: [hostId], references: [userId], onDelete: Cascade)
  users        user[]     @relation("members")
  messages     messages[]
  name         String
  lastAccessed DateTime?  @updatedAt
}

model user {
  userId       Int        @id @default(autoincrement())
  linkId       Int        @unique
  messages     messages[]
  chatHost     chats[]    @relation("host")
  members      chats[]    @relation("members")
  blockedUsers user[]     @relation("BlockedUsers")
  blockedBy    user[]     @relation("BlockedUsers")
  username     String     @unique
}
